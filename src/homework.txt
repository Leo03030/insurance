GIT:
1. Local/Remote branch
2. GIT Commands: checkout, fetch, pull, add (stage), commit, push
*****************************************

*************************
REDUX example of fetching and displaying data from a .json file
https://hackernoon.com/fetching-data-from-a-json-file-with-a-react-and-redux-app


Ovik:

React JS
1. Redux. 
   a. Create a new store for Insurance packages.
   b. Async (Please refer to the time functionality) load packages from the packages.json file
   c. Create a Redux Provider. 
      Accesssing store via "useStore" hook (https://react-redux.js.org/using-react-redux/accessing-store)
   d. Create a table view to display a list of packages
   e. work in the feature/packages branch   

Arman:
React JS
1. Redux. 
   a. Create a new store for Users (create a new users.json file):
      User Name, contact info, address, identifier (email?)
   b. Async (Please refer to the time functionality) load packages from the users.json file
   c. Create a Redux Provider. 
      Accesssing store via "useStore" hook (https://react-redux.js.org/using-react-redux/accessing-store)
   d. Create a table view to display a list of packages
   e. work in the feature/users branch   (git checkout -b feature/users)




   All:
   1. Combine together User + Packages stores into one export file and use it in App.js file
   2. Update underlying User + Packages component to use store child items (u, p in the example 'store.js' file)
   3. Push changes, Arman will be able to use it


   Hovo:
   1. Create nodejs application for authentication. Manage user session and allow navigate for authenticated user, show 403 (forbidden) status for non authenticated users


   Arman:
   1. Allow a user to choose one or more available packages and naviagate to the checkout page
